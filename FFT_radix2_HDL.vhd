-- -------------------------------------------------------------
-- 
-- File Name: D:\codegen\fft_radix2_hdl\hdlsrc\fft_radix2_hdl_fixpt.vhd
-- Created: 2025-05-11 19:44:26
-- 
-- Generated by MATLAB 24.2, MATLAB Coder 24.2 and HDL Coder 24.2
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- fft_out_re                    ce_out        1
-- fft_out_im                    ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: fft_radix2_hdl_fixpt
-- Source Path: fft_radix2_hdl_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.fft_radix2_hdl_fixpt_pkg.ALL;

ENTITY fft_radix2_hdl_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        input_data_1_re                   :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
        input_data_1_im                   :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
        ce_out                            :   OUT   std_logic;
        fft_out_re                        :   OUT   vector_of_std_logic_vector14(0 TO 7);  -- sfix14_En10 [8]
        fft_out_im                        :   OUT   vector_of_std_logic_vector14(0 TO 7)  -- sfix14_En10 [8]
        );
END fft_radix2_hdl_fixpt;


ARCHITECTURE rtl OF fft_radix2_hdl_fixpt IS

  -- Constants
  CONSTANT nc                             : vector_of_unsigned4(0 TO 7) := 
    (to_unsigned(16#1#, 4), to_unsigned(16#5#, 4), to_unsigned(16#3#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#6#, 4), to_unsigned(16#4#, 4), to_unsigned(16#8#, 4));  -- ufix4 [8]
  CONSTANT nc_2                           : vector_of_signed16(0 TO 255) := 
    (to_signed(16#7FFF#, 16), to_signed(16#7FF6#, 16), to_signed(16#7FD9#, 16), to_signed(16#7FA7#, 16),
     to_signed(16#7F62#, 16), to_signed(16#7F0A#, 16), to_signed(16#7E9D#, 16), to_signed(16#7E1E#, 16),
     to_signed(16#7D8A#, 16), to_signed(16#7CE4#, 16), to_signed(16#7C2A#, 16), to_signed(16#7B5D#, 16),
     to_signed(16#7A7D#, 16), to_signed(16#798A#, 16), to_signed(16#7885#, 16), to_signed(16#776C#, 16),
     to_signed(16#7642#, 16), to_signed(16#7505#, 16), to_signed(16#73B6#, 16), to_signed(16#7255#, 16),
     to_signed(16#70E3#, 16), to_signed(16#6F5F#, 16), to_signed(16#6DCA#, 16), to_signed(16#6C24#, 16),
     to_signed(16#6A6E#, 16), to_signed(16#68A7#, 16), to_signed(16#66D0#, 16), to_signed(16#64E9#, 16),
     to_signed(16#62F2#, 16), to_signed(16#60EC#, 16), to_signed(16#5ED7#, 16), to_signed(16#5CB4#, 16),
     to_signed(16#5A82#, 16), to_signed(16#5843#, 16), to_signed(16#55F6#, 16), to_signed(16#539B#, 16),
     to_signed(16#5134#, 16), to_signed(16#4EC0#, 16), to_signed(16#4C40#, 16), to_signed(16#49B4#, 16),
     to_signed(16#471D#, 16), to_signed(16#447B#, 16), to_signed(16#41CE#, 16), to_signed(16#3F17#, 16),
     to_signed(16#3C57#, 16), to_signed(16#398D#, 16), to_signed(16#36BA#, 16), to_signed(16#33DF#, 16),
     to_signed(16#30FC#, 16), to_signed(16#2E11#, 16), to_signed(16#2B1F#, 16), to_signed(16#2827#, 16),
     to_signed(16#2528#, 16), to_signed(16#2224#, 16), to_signed(16#1F1A#, 16), to_signed(16#1C0C#, 16),
     to_signed(16#18F9#, 16), to_signed(16#15E2#, 16), to_signed(16#12C8#, 16), to_signed(16#0FAB#, 16),
     to_signed(16#0C8C#, 16), to_signed(16#096B#, 16), to_signed(16#0648#, 16), to_signed(16#0324#, 16),
     to_signed(16#0000#, 16), to_signed(-16#0324#, 16), to_signed(-16#0648#, 16), to_signed(-16#096B#, 16),
     to_signed(-16#0C8C#, 16), to_signed(-16#0FAB#, 16), to_signed(-16#12C8#, 16), to_signed(-16#15E2#, 16),
     to_signed(-16#18F9#, 16), to_signed(-16#1C0C#, 16), to_signed(-16#1F1A#, 16), to_signed(-16#2224#, 16),
     to_signed(-16#2528#, 16), to_signed(-16#2827#, 16), to_signed(-16#2B1F#, 16), to_signed(-16#2E11#, 16),
     to_signed(-16#30FC#, 16), to_signed(-16#33DF#, 16), to_signed(-16#36BA#, 16), to_signed(-16#398D#, 16),
     to_signed(-16#3C57#, 16), to_signed(-16#3F17#, 16), to_signed(-16#41CE#, 16), to_signed(-16#447B#, 16),
     to_signed(-16#471D#, 16), to_signed(-16#49B4#, 16), to_signed(-16#4C40#, 16), to_signed(-16#4EC0#, 16),
     to_signed(-16#5134#, 16), to_signed(-16#539B#, 16), to_signed(-16#55F6#, 16), to_signed(-16#5843#, 16),
     to_signed(-16#5A82#, 16), to_signed(-16#5CB4#, 16), to_signed(-16#5ED7#, 16), to_signed(-16#60EC#, 16),
     to_signed(-16#62F2#, 16), to_signed(-16#64E9#, 16), to_signed(-16#66D0#, 16), to_signed(-16#68A7#, 16),
     to_signed(-16#6A6E#, 16), to_signed(-16#6C24#, 16), to_signed(-16#6DCA#, 16), to_signed(-16#6F5F#, 16),
     to_signed(-16#70E3#, 16), to_signed(-16#7255#, 16), to_signed(-16#73B6#, 16), to_signed(-16#7505#, 16),
     to_signed(-16#7642#, 16), to_signed(-16#776C#, 16), to_signed(-16#7885#, 16), to_signed(-16#798A#, 16),
     to_signed(-16#7A7D#, 16), to_signed(-16#7B5D#, 16), to_signed(-16#7C2A#, 16), to_signed(-16#7CE4#, 16),
     to_signed(-16#7D8A#, 16), to_signed(-16#7E1E#, 16), to_signed(-16#7E9D#, 16), to_signed(-16#7F0A#, 16),
     to_signed(-16#7F62#, 16), to_signed(-16#7FA7#, 16), to_signed(-16#7FD9#, 16), to_signed(-16#7FF6#, 16),
     to_signed(-16#7FFF#, 16), to_signed(-16#7FF6#, 16), to_signed(-16#7FD9#, 16), to_signed(-16#7FA7#, 16),
     to_signed(-16#7F62#, 16), to_signed(-16#7F0A#, 16), to_signed(-16#7E9D#, 16), to_signed(-16#7E1E#, 16),
     to_signed(-16#7D8A#, 16), to_signed(-16#7CE4#, 16), to_signed(-16#7C2A#, 16), to_signed(-16#7B5D#, 16),
     to_signed(-16#7A7D#, 16), to_signed(-16#798A#, 16), to_signed(-16#7885#, 16), to_signed(-16#776C#, 16),
     to_signed(-16#7642#, 16), to_signed(-16#7505#, 16), to_signed(-16#73B6#, 16), to_signed(-16#7255#, 16),
     to_signed(-16#70E3#, 16), to_signed(-16#6F5F#, 16), to_signed(-16#6DCA#, 16), to_signed(-16#6C24#, 16),
     to_signed(-16#6A6E#, 16), to_signed(-16#68A7#, 16), to_signed(-16#66D0#, 16), to_signed(-16#64E9#, 16),
     to_signed(-16#62F2#, 16), to_signed(-16#60EC#, 16), to_signed(-16#5ED7#, 16), to_signed(-16#5CB4#, 16),
     to_signed(-16#5A82#, 16), to_signed(-16#5843#, 16), to_signed(-16#55F6#, 16), to_signed(-16#539B#, 16),
     to_signed(-16#5134#, 16), to_signed(-16#4EC0#, 16), to_signed(-16#4C40#, 16), to_signed(-16#49B4#, 16),
     to_signed(-16#471D#, 16), to_signed(-16#447B#, 16), to_signed(-16#41CE#, 16), to_signed(-16#3F17#, 16),
     to_signed(-16#3C57#, 16), to_signed(-16#398D#, 16), to_signed(-16#36BA#, 16), to_signed(-16#33DF#, 16),
     to_signed(-16#30FC#, 16), to_signed(-16#2E11#, 16), to_signed(-16#2B1F#, 16), to_signed(-16#2827#, 16),
     to_signed(-16#2528#, 16), to_signed(-16#2224#, 16), to_signed(-16#1F1A#, 16), to_signed(-16#1C0C#, 16),
     to_signed(-16#18F9#, 16), to_signed(-16#15E2#, 16), to_signed(-16#12C8#, 16), to_signed(-16#0FAB#, 16),
     to_signed(-16#0C8C#, 16), to_signed(-16#096B#, 16), to_signed(-16#0648#, 16), to_signed(-16#0324#, 16),
     to_signed(16#0000#, 16), to_signed(16#0324#, 16), to_signed(16#0648#, 16), to_signed(16#096B#, 16),
     to_signed(16#0C8C#, 16), to_signed(16#0FAB#, 16), to_signed(16#12C8#, 16), to_signed(16#15E2#, 16),
     to_signed(16#18F9#, 16), to_signed(16#1C0C#, 16), to_signed(16#1F1A#, 16), to_signed(16#2224#, 16),
     to_signed(16#2528#, 16), to_signed(16#2827#, 16), to_signed(16#2B1F#, 16), to_signed(16#2E11#, 16),
     to_signed(16#30FC#, 16), to_signed(16#33DF#, 16), to_signed(16#36BA#, 16), to_signed(16#398D#, 16),
     to_signed(16#3C57#, 16), to_signed(16#3F17#, 16), to_signed(16#41CE#, 16), to_signed(16#447B#, 16),
     to_signed(16#471D#, 16), to_signed(16#49B4#, 16), to_signed(16#4C40#, 16), to_signed(16#4EC0#, 16),
     to_signed(16#5134#, 16), to_signed(16#539B#, 16), to_signed(16#55F6#, 16), to_signed(16#5843#, 16),
     to_signed(16#5A82#, 16), to_signed(16#5CB4#, 16), to_signed(16#5ED7#, 16), to_signed(16#60EC#, 16),
     to_signed(16#62F2#, 16), to_signed(16#64E9#, 16), to_signed(16#66D0#, 16), to_signed(16#68A7#, 16),
     to_signed(16#6A6E#, 16), to_signed(16#6C24#, 16), to_signed(16#6DCA#, 16), to_signed(16#6F5F#, 16),
     to_signed(16#70E3#, 16), to_signed(16#7255#, 16), to_signed(16#73B6#, 16), to_signed(16#7505#, 16),
     to_signed(16#7642#, 16), to_signed(16#776C#, 16), to_signed(16#7885#, 16), to_signed(16#798A#, 16),
     to_signed(16#7A7D#, 16), to_signed(16#7B5D#, 16), to_signed(16#7C2A#, 16), to_signed(16#7CE4#, 16),
     to_signed(16#7D8A#, 16), to_signed(16#7E1E#, 16), to_signed(16#7E9D#, 16), to_signed(16#7F0A#, 16),
     to_signed(16#7F62#, 16), to_signed(16#7FA7#, 16), to_signed(16#7FD9#, 16), to_signed(16#7FF6#, 16));  -- sfix16 [256]
  CONSTANT nc_4                           : vector_of_signed16(0 TO 255) := 
    (to_signed(16#0000#, 16), to_signed(16#0324#, 16), to_signed(16#0648#, 16), to_signed(16#096B#, 16),
     to_signed(16#0C8C#, 16), to_signed(16#0FAB#, 16), to_signed(16#12C8#, 16), to_signed(16#15E2#, 16),
     to_signed(16#18F9#, 16), to_signed(16#1C0C#, 16), to_signed(16#1F1A#, 16), to_signed(16#2224#, 16),
     to_signed(16#2528#, 16), to_signed(16#2827#, 16), to_signed(16#2B1F#, 16), to_signed(16#2E11#, 16),
     to_signed(16#30FC#, 16), to_signed(16#33DF#, 16), to_signed(16#36BA#, 16), to_signed(16#398D#, 16),
     to_signed(16#3C57#, 16), to_signed(16#3F17#, 16), to_signed(16#41CE#, 16), to_signed(16#447B#, 16),
     to_signed(16#471D#, 16), to_signed(16#49B4#, 16), to_signed(16#4C40#, 16), to_signed(16#4EC0#, 16),
     to_signed(16#5134#, 16), to_signed(16#539B#, 16), to_signed(16#55F6#, 16), to_signed(16#5843#, 16),
     to_signed(16#5A82#, 16), to_signed(16#5CB4#, 16), to_signed(16#5ED7#, 16), to_signed(16#60EC#, 16),
     to_signed(16#62F2#, 16), to_signed(16#64E9#, 16), to_signed(16#66D0#, 16), to_signed(16#68A7#, 16),
     to_signed(16#6A6E#, 16), to_signed(16#6C24#, 16), to_signed(16#6DCA#, 16), to_signed(16#6F5F#, 16),
     to_signed(16#70E3#, 16), to_signed(16#7255#, 16), to_signed(16#73B6#, 16), to_signed(16#7505#, 16),
     to_signed(16#7642#, 16), to_signed(16#776C#, 16), to_signed(16#7885#, 16), to_signed(16#798A#, 16),
     to_signed(16#7A7D#, 16), to_signed(16#7B5D#, 16), to_signed(16#7C2A#, 16), to_signed(16#7CE4#, 16),
     to_signed(16#7D8A#, 16), to_signed(16#7E1E#, 16), to_signed(16#7E9D#, 16), to_signed(16#7F0A#, 16),
     to_signed(16#7F62#, 16), to_signed(16#7FA7#, 16), to_signed(16#7FD9#, 16), to_signed(16#7FF6#, 16),
     to_signed(16#7FFF#, 16), to_signed(16#7FF6#, 16), to_signed(16#7FD9#, 16), to_signed(16#7FA7#, 16),
     to_signed(16#7F62#, 16), to_signed(16#7F0A#, 16), to_signed(16#7E9D#, 16), to_signed(16#7E1E#, 16),
     to_signed(16#7D8A#, 16), to_signed(16#7CE4#, 16), to_signed(16#7C2A#, 16), to_signed(16#7B5D#, 16),
     to_signed(16#7A7D#, 16), to_signed(16#798A#, 16), to_signed(16#7885#, 16), to_signed(16#776C#, 16),
     to_signed(16#7642#, 16), to_signed(16#7505#, 16), to_signed(16#73B6#, 16), to_signed(16#7255#, 16),
     to_signed(16#70E3#, 16), to_signed(16#6F5F#, 16), to_signed(16#6DCA#, 16), to_signed(16#6C24#, 16),
     to_signed(16#6A6E#, 16), to_signed(16#68A7#, 16), to_signed(16#66D0#, 16), to_signed(16#64E9#, 16),
     to_signed(16#62F2#, 16), to_signed(16#60EC#, 16), to_signed(16#5ED7#, 16), to_signed(16#5CB4#, 16),
     to_signed(16#5A82#, 16), to_signed(16#5843#, 16), to_signed(16#55F6#, 16), to_signed(16#539B#, 16),
     to_signed(16#5134#, 16), to_signed(16#4EC0#, 16), to_signed(16#4C40#, 16), to_signed(16#49B4#, 16),
     to_signed(16#471D#, 16), to_signed(16#447B#, 16), to_signed(16#41CE#, 16), to_signed(16#3F17#, 16),
     to_signed(16#3C57#, 16), to_signed(16#398D#, 16), to_signed(16#36BA#, 16), to_signed(16#33DF#, 16),
     to_signed(16#30FC#, 16), to_signed(16#2E11#, 16), to_signed(16#2B1F#, 16), to_signed(16#2827#, 16),
     to_signed(16#2528#, 16), to_signed(16#2224#, 16), to_signed(16#1F1A#, 16), to_signed(16#1C0C#, 16),
     to_signed(16#18F9#, 16), to_signed(16#15E2#, 16), to_signed(16#12C8#, 16), to_signed(16#0FAB#, 16),
     to_signed(16#0C8C#, 16), to_signed(16#096B#, 16), to_signed(16#0648#, 16), to_signed(16#0324#, 16),
     to_signed(16#0000#, 16), to_signed(-16#0324#, 16), to_signed(-16#0648#, 16), to_signed(-16#096B#, 16),
     to_signed(-16#0C8C#, 16), to_signed(-16#0FAB#, 16), to_signed(-16#12C8#, 16), to_signed(-16#15E2#, 16),
     to_signed(-16#18F9#, 16), to_signed(-16#1C0C#, 16), to_signed(-16#1F1A#, 16), to_signed(-16#2224#, 16),
     to_signed(-16#2528#, 16), to_signed(-16#2827#, 16), to_signed(-16#2B1F#, 16), to_signed(-16#2E11#, 16),
     to_signed(-16#30FC#, 16), to_signed(-16#33DF#, 16), to_signed(-16#36BA#, 16), to_signed(-16#398D#, 16),
     to_signed(-16#3C57#, 16), to_signed(-16#3F17#, 16), to_signed(-16#41CE#, 16), to_signed(-16#447B#, 16),
     to_signed(-16#471D#, 16), to_signed(-16#49B4#, 16), to_signed(-16#4C40#, 16), to_signed(-16#4EC0#, 16),
     to_signed(-16#5134#, 16), to_signed(-16#539B#, 16), to_signed(-16#55F6#, 16), to_signed(-16#5843#, 16),
     to_signed(-16#5A82#, 16), to_signed(-16#5CB4#, 16), to_signed(-16#5ED7#, 16), to_signed(-16#60EC#, 16),
     to_signed(-16#62F2#, 16), to_signed(-16#64E9#, 16), to_signed(-16#66D0#, 16), to_signed(-16#68A7#, 16),
     to_signed(-16#6A6E#, 16), to_signed(-16#6C24#, 16), to_signed(-16#6DCA#, 16), to_signed(-16#6F5F#, 16),
     to_signed(-16#70E3#, 16), to_signed(-16#7255#, 16), to_signed(-16#73B6#, 16), to_signed(-16#7505#, 16),
     to_signed(-16#7642#, 16), to_signed(-16#776C#, 16), to_signed(-16#7885#, 16), to_signed(-16#798A#, 16),
     to_signed(-16#7A7D#, 16), to_signed(-16#7B5D#, 16), to_signed(-16#7C2A#, 16), to_signed(-16#7CE4#, 16),
     to_signed(-16#7D8A#, 16), to_signed(-16#7E1E#, 16), to_signed(-16#7E9D#, 16), to_signed(-16#7F0A#, 16),
     to_signed(-16#7F62#, 16), to_signed(-16#7FA7#, 16), to_signed(-16#7FD9#, 16), to_signed(-16#7FF6#, 16),
     to_signed(-16#7FFF#, 16), to_signed(-16#7FF6#, 16), to_signed(-16#7FD9#, 16), to_signed(-16#7FA7#, 16),
     to_signed(-16#7F62#, 16), to_signed(-16#7F0A#, 16), to_signed(-16#7E9D#, 16), to_signed(-16#7E1E#, 16),
     to_signed(-16#7D8A#, 16), to_signed(-16#7CE4#, 16), to_signed(-16#7C2A#, 16), to_signed(-16#7B5D#, 16),
     to_signed(-16#7A7D#, 16), to_signed(-16#798A#, 16), to_signed(-16#7885#, 16), to_signed(-16#776C#, 16),
     to_signed(-16#7642#, 16), to_signed(-16#7505#, 16), to_signed(-16#73B6#, 16), to_signed(-16#7255#, 16),
     to_signed(-16#70E3#, 16), to_signed(-16#6F5F#, 16), to_signed(-16#6DCA#, 16), to_signed(-16#6C24#, 16),
     to_signed(-16#6A6E#, 16), to_signed(-16#68A7#, 16), to_signed(-16#66D0#, 16), to_signed(-16#64E9#, 16),
     to_signed(-16#62F2#, 16), to_signed(-16#60EC#, 16), to_signed(-16#5ED7#, 16), to_signed(-16#5CB4#, 16),
     to_signed(-16#5A82#, 16), to_signed(-16#5843#, 16), to_signed(-16#55F6#, 16), to_signed(-16#539B#, 16),
     to_signed(-16#5134#, 16), to_signed(-16#4EC0#, 16), to_signed(-16#4C40#, 16), to_signed(-16#49B4#, 16),
     to_signed(-16#471D#, 16), to_signed(-16#447B#, 16), to_signed(-16#41CE#, 16), to_signed(-16#3F17#, 16),
     to_signed(-16#3C57#, 16), to_signed(-16#398D#, 16), to_signed(-16#36BA#, 16), to_signed(-16#33DF#, 16),
     to_signed(-16#30FC#, 16), to_signed(-16#2E11#, 16), to_signed(-16#2B1F#, 16), to_signed(-16#2827#, 16),
     to_signed(-16#2528#, 16), to_signed(-16#2224#, 16), to_signed(-16#1F1A#, 16), to_signed(-16#1C0C#, 16),
     to_signed(-16#18F9#, 16), to_signed(-16#15E2#, 16), to_signed(-16#12C8#, 16), to_signed(-16#0FAB#, 16),
     to_signed(-16#0C8C#, 16), to_signed(-16#096B#, 16), to_signed(-16#0648#, 16), to_signed(-16#0324#, 16));  -- sfix16 [256]
  CONSTANT nc_6                           : vector_of_unsigned16(0 TO 7) := 
    (to_unsigned(16#0000#, 16), to_unsigned(16#AFE7#, 16), to_unsigned(16#96C7#, 16), to_unsigned(16#7DA7#, 16),
     to_unsigned(16#6487#, 16), to_unsigned(16#4B5F#, 16), to_unsigned(16#323F#, 16), to_unsigned(16#191F#, 16));  -- ufix16 [8]
  CONSTANT nc_8                           : vector_of_unsigned16(0 TO 7) := 
    (to_unsigned(16#0000#, 16), to_unsigned(16#AFE7#, 16), to_unsigned(16#96C7#, 16), to_unsigned(16#7DA7#, 16),
     to_unsigned(16#6487#, 16), to_unsigned(16#4B5F#, 16), to_unsigned(16#323F#, 16), to_unsigned(16#191F#, 16));  -- ufix16 [8]
  CONSTANT nc_10                          : vector_of_unsigned16(0 TO 7) := 
    (to_unsigned(16#0000#, 16), to_unsigned(16#AFE7#, 16), to_unsigned(16#96C7#, 16), to_unsigned(16#7DA7#, 16),
     to_unsigned(16#6487#, 16), to_unsigned(16#4B5F#, 16), to_unsigned(16#323F#, 16), to_unsigned(16#191F#, 16));  -- ufix16 [8]

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL y                                : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL y_1                              : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL y_2                              : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL y_3                              : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL y_4                              : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL y_5                              : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]
  SIGNAL input_data_re                    : std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
  SIGNAL input_data_im                    : std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
  SIGNAL reversed_data_re                 : std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
  SIGNAL reversed_data_im                 : std_logic_vector(7 DOWNTO 0);  -- ufix1 [8]
  SIGNAL p6_sub_cast                      : vector_of_signed32(0 TO 7);  -- int32 [8]
  SIGNAL p6_sub_cast_1                    : vector_of_signed32(0 TO 7);  -- int32 [8]
  SIGNAL stage_out_re                     : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL stage_out_im                     : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL FI_SIN_COS_LUT                   : vector_of_signed16(0 TO 255);  -- sfix16_En15 [256]
  SIGNAL FI_SIN_COS_LUT_1                 : vector_of_signed16(0 TO 255);  -- sfix16_En15 [256]
  SIGNAL W_ROM_8_not_empty                : std_logic;
  SIGNAL W_ROM_8_not_empty_1              : std_logic;
  SIGNAL W_ROM_8_re                       : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_im                       : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_re_1                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_im_1                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_re_2                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_im_2                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_not_empty_2              : std_logic;
  SIGNAL stage_out_re_1                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL stage_out_im_1                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL W_ROM_8_re_3                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_im_3                     : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL W_ROM_8_not_empty_3              : std_logic;
  SIGNAL stage_out_re_2                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL stage_out_im_2                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL stage_out_re_3                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL stage_out_im_3                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL fft_out_re_tmp                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]
  SIGNAL fft_out_im_tmp                   : vector_of_signed14(0 TO 7);  -- sfix14_En10 [8]

BEGIN
  y <= (OTHERS => to_signed(16#0000#, 16));

  y_1 <= (OTHERS => to_signed(16#0000#, 16));

  -- MATLAB indexing
  -- Choose wider type
  -- Precomputed twiddle factors for N=8
  -- Return twiddle factor W_N^k from static table (N = 8 fixed)
  -- MATLAB indexing
  -- Choose wider type
  -- Precomputed twiddle factors for N=8
  -- Return twiddle factor W_N^k from static table (N = 8 fixed)
  -- chá» cháº¡y 2 block
  -- MATLAB indexing
  -- Choose wider type
  -- Precomputed twiddle factors for N=8
  -- Return twiddle factor W_N^k from static table (N = 8 fixed)
  y_2 <= (OTHERS => to_signed(16#0000#, 16));

  y_3 <= (OTHERS => to_signed(16#0000#, 16));

  y_4 <= (OTHERS => to_signed(16#0000#, 16));

  y_5 <= (OTHERS => to_signed(16#0000#, 16));

  enb <= clk_enable;

  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  --                                                                          %
  --          Generated by MATLAB 24.2 and Fixed-Point Designer 24.2          %
  --                                                                          %
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- RADIX2_FFT_HDL Radix-2 FFT implementation for HDL Coder (N = 8 fixed)
  --   [fft_out] = radix2_fft_hdl(input_data) computes the FFT of input_data
  --   using radix-2 algorithm optimized for HDL generation
  -- Ensure fixed size and format
  input_data_re <= input_data_1_re;
  input_data_im <= input_data_1_im;

  -- ensure column
  -- Validate input length
  -- Bit-reverse the input
  -- BIT_REVERSE Perform bit reversal permutation for N = 8
  -- MATLAB indexing (bit-reverse of 0:7)

  reversed_data_im_gen: FOR i IN 0 TO 7 GENERATE
    p6_sub_cast(i) <= signed(resize(nc(i), 32));
    reversed_data_re(i) <= input_data_re(to_integer(p6_sub_cast(i) - 1));
    p6_sub_cast_1(i) <= signed(resize(nc(i), 32));
    reversed_data_im(i) <= input_data_im(to_integer(p6_sub_cast_1(i) - 1));
  END GENERATE reversed_data_im_gen;


  -- Compute FFT (statically unrolled)
  -- FFT_STAGE Explicitly unrolled FFT stages for N = 8

  stage_out_im_gen: FOR t_0 IN 0 TO 7 GENERATE
    stage_out_re(t_0) <= signed(resize(unsigned'(reversed_data_re(t_0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 14));
    stage_out_im(t_0) <= signed(resize(unsigned'(reversed_data_im(t_0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0'), 14));
  END GENERATE stage_out_im_gen;


  FI_SIN_COS_LUT <= nc_2;

  FI_SIN_COS_LUT_1 <= nc_4;

  W_ROM_8_not_empty_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      W_ROM_8_not_empty_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        W_ROM_8_not_empty_1 <= W_ROM_8_not_empty;
      END IF;
    END IF;
  END PROCESS W_ROM_8_not_empty_reg_process;


  W_ROM_8_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      W_ROM_8_re_1 <= (OTHERS => to_signed(16#0000#, 14));
      W_ROM_8_im_1 <= (OTHERS => to_signed(16#0000#, 14));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        W_ROM_8_re_1 <= W_ROM_8_re;
        W_ROM_8_im_1 <= W_ROM_8_im;
      END IF;
    END IF;
  END PROCESS W_ROM_8_reg_process;


  -- === Stage 1 (distance = 1) ===
  p4_output : PROCESS (FI_SIN_COS_LUT, FI_SIN_COS_LUT_1, W_ROM_8_im_1, W_ROM_8_not_empty_1,
       W_ROM_8_re_1, stage_out_im, stage_out_re)
    VARIABLE W_ROM_8_re1 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_im1 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_re1 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_im1 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_not_empty1 : std_logic;
    VARIABLE idx1 : unsigned(2 DOWNTO 0);
    VARIABLE idx2 : unsigned(3 DOWNTO 0);
    VARIABLE fullScaleIndex : unsigned(15 DOWNTO 0);
    VARIABLE idxLUTLoZero : unsigned(7 DOWNTO 0);
    VARIABLE fullscaleindex_0 : unsigned(15 DOWNTO 0);
    VARIABLE idxlutlozero_0 : unsigned(7 DOWNTO 0);
    VARIABLE w_rom_8_not_empty_0 : std_logic;
    VARIABLE t_re : signed(13 DOWNTO 0);
    VARIABLE t_im : signed(13 DOWNTO 0);
    VARIABLE stage_out_re_0 : signed(13 DOWNTO 0);
    VARIABLE stage_out_im_0 : signed(13 DOWNTO 0);
    VARIABLE add_cast : vector_of_signed64(0 TO 3);
    VARIABLE add_cast_0 : vector_of_signed32(0 TO 3);
    VARIABLE add_cast_1 : vector_of_unsigned3(0 TO 3);
    VARIABLE sub_cast : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp : vector_of_signed28(0 TO 3);
    VARIABLE sub_cast_0 : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_1 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_0 : vector_of_signed28(0 TO 3);
    VARIABLE sub_cast_2 : vector_of_signed29(0 TO 3);
    VARIABLE sub_temp : vector_of_signed29(0 TO 3);
    VARIABLE mul_temp_1 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_3 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_2 : vector_of_signed28(0 TO 3);
    VARIABLE add_cast_2 : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_4 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_3 : vector_of_signed28(0 TO 3);
    VARIABLE add_cast_3 : vector_of_signed29(0 TO 3);
    VARIABLE add_temp : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_5 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_4 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast_0 : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_6 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_7 : vector_of_signed32(0 TO 3);
    VARIABLE add_cast_4 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_5 : vector_of_signed15(0 TO 3);
    VARIABLE add_temp_0 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_6 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_7 : vector_of_signed32(0 TO 7);
    VARIABLE cast_1 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_1 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_8 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_8 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_9 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_9 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_0 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_5 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_10 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_11 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_12 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_2 : vector_of_signed32(0 TO 7);
    VARIABLE cast_2 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_10 : vector_of_signed32(0 TO 3);
    VARIABLE add_cast_13 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_14 : vector_of_signed15(0 TO 3);
    VARIABLE add_temp_3 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_15 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_16 : vector_of_signed32(0 TO 7);
    VARIABLE cast_3 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_4 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_17 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_11 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_18 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_12 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_1 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_6 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_19 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_20 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_21 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_5 : vector_of_signed32(0 TO 7);
    VARIABLE cast_4 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_13 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_14 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_15 : vector_of_signed15(0 TO 3);
    VARIABLE sub_temp_2 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_16 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_17 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_18 : vector_of_signed15(0 TO 3);
    VARIABLE sub_temp_3 : vector_of_signed15(0 TO 3);
  BEGIN
    idx1 := to_unsigned(16#0#, 3);
    idx2 := to_unsigned(16#0#, 4);
    idxLUTLoZero := to_unsigned(16#00#, 8);
    idxlutlozero_0 := to_unsigned(16#00#, 8);
    w_rom_8_not_empty_0 := '0';
    fullScaleIndex := to_unsigned(16#0000#, 16);
    fullscaleindex_0 := to_unsigned(16#0000#, 16);
    t_re := to_signed(16#0000#, 14);
    t_im := to_signed(16#0000#, 14);
    stage_out_re_0 := to_signed(16#0000#, 14);
    stage_out_im_0 := to_signed(16#0000#, 14);
    W_ROM_8_re1 := W_ROM_8_re_1;
    W_ROM_8_im1 := W_ROM_8_im_1;
    stage_out_re1 := stage_out_re;
    stage_out_im1 := stage_out_im;
    W_ROM_8_not_empty1 := W_ROM_8_not_empty_1;

    FOR k_iter IN 0 TO 3 LOOP
      add_cast(k_iter) := resize(to_signed(k_iter, 32) & '0', 64);
      add_cast_0(k_iter) := add_cast(k_iter)(31 DOWNTO 0);
      add_cast_1(k_iter) := unsigned(add_cast_0(k_iter)(2 DOWNTO 0));
      idx1 := add_cast_1(k_iter) + to_unsigned(16#1#, 3);
      idx2 := resize(idx1, 4) + to_unsigned(16#1#, 4);
      IF ( NOT W_ROM_8_not_empty1) = '1' THEN 

        FOR k IN 0 TO 7 LOOP
          mul_temp_1(k) := unsigned'(X"A2F96524") * nc_6(k);
          cast(k) := mul_temp_1(k)(46 DOWNTO 15);
          fullScaleIndex := cast(k)(31 DOWNTO 16);
          idxLUTLoZero := fullScaleIndex(15 DOWNTO 8);
          mul_temp_4(k) := unsigned'(X"A2F96524") * nc_6(k);
          cast_0(k) := mul_temp_4(k)(46 DOWNTO 15);
          fullscaleindex_0 := cast_0(k)(31 DOWNTO 16);
          idxlutlozero_0 := fullscaleindex_0(15 DOWNTO 8);
          add_cast_6(k) := signed(resize(idxLUTLoZero, 16));
          add_cast_7(k) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_6(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          cast_1(k) := signed(resize(fullScaleIndex(7 DOWNTO 0), 9));
          add_temp_1(k) := idxLUTLoZero + to_unsigned(16#01#, 8);
          add_cast_8(k) := signed(resize(add_temp_1(k), 16));
          sub_cast_8(k) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_8(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_cast_9(k) := signed(resize(idxLUTLoZero, 16));
          sub_cast_9(k) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_9(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          sub_temp_0(k) := sub_cast_8(k) - sub_cast_9(k);
          mul_temp_5(k) := cast_1(k) * sub_temp_0(k);
          add_cast_10(k) := mul_temp_5(k)(39 DOWNTO 8);
          add_cast_11(k) := add_cast_10(k)(30 DOWNTO 15);
          add_cast_12(k) := resize(add_cast_11(k) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_temp_2(k) := add_cast_7(k) + add_cast_12(k);
          cast_2(k) := add_temp_2(k)(30 DOWNTO 15);
          W_ROM_8_re1(k) := resize(cast_2(k)(15 DOWNTO 3), 14);
          add_cast_15(k) := signed(resize(idxlutlozero_0, 16));
          add_cast_16(k) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_15(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          cast_3(k) := signed(resize(fullscaleindex_0(7 DOWNTO 0), 9));
          add_temp_4(k) := idxlutlozero_0 + to_unsigned(16#01#, 8);
          add_cast_17(k) := signed(resize(add_temp_4(k), 16));
          sub_cast_11(k) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_17(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_cast_18(k) := signed(resize(idxlutlozero_0, 16));
          sub_cast_12(k) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_18(k) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          sub_temp_1(k) := sub_cast_11(k) - sub_cast_12(k);
          mul_temp_6(k) := cast_3(k) * sub_temp_1(k);
          add_cast_19(k) := mul_temp_6(k)(39 DOWNTO 8);
          add_cast_20(k) := add_cast_19(k)(30 DOWNTO 15);
          add_cast_21(k) := resize(add_cast_20(k) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_temp_5(k) := add_cast_16(k) + add_cast_21(k);
          cast_4(k) := add_temp_5(k)(30 DOWNTO 15);
          W_ROM_8_im1(k) := resize(cast_4(k)(15 DOWNTO 3), 14);
        END LOOP;

        w_rom_8_not_empty_0 := '1';
      ELSE 
        w_rom_8_not_empty_0 := W_ROM_8_not_empty1;
      END IF;
      sub_cast(k_iter) := signed(resize(idx2, 32));
      mul_temp(k_iter) := stage_out_re1(to_integer(sub_cast(k_iter) - 1)) * W_ROM_8_re1(0);
      sub_cast_0(k_iter) := resize(mul_temp(k_iter), 29);
      sub_cast_1(k_iter) := signed(resize(idx2, 32));
      mul_temp_0(k_iter) := stage_out_im1(to_integer(sub_cast_1(k_iter) - 1)) * W_ROM_8_im1(0);
      sub_cast_2(k_iter) := resize(mul_temp_0(k_iter), 29);
      sub_temp(k_iter) := sub_cast_0(k_iter) - sub_cast_2(k_iter);
      t_re := sub_temp(k_iter)(24 DOWNTO 11);
      sub_cast_3(k_iter) := signed(resize(idx2, 32));
      mul_temp_2(k_iter) := stage_out_re1(to_integer(sub_cast_3(k_iter) - 1)) * W_ROM_8_im1(0);
      add_cast_2(k_iter) := resize(mul_temp_2(k_iter), 29);
      sub_cast_4(k_iter) := signed(resize(idx2, 32));
      mul_temp_3(k_iter) := stage_out_im1(to_integer(sub_cast_4(k_iter) - 1)) * W_ROM_8_re1(0);
      add_cast_3(k_iter) := resize(mul_temp_3(k_iter), 29);
      add_temp(k_iter) := add_cast_2(k_iter) + add_cast_3(k_iter);
      t_im := add_temp(k_iter)(24 DOWNTO 11);
      sub_cast_5(k_iter) := signed(resize(idx1, 32));
      stage_out_re_0 := stage_out_re1(to_integer(sub_cast_5(k_iter) - 1))(12 DOWNTO 0) & '0';
      sub_cast_6(k_iter) := signed(resize(idx1, 32));
      stage_out_im_0 := stage_out_im1(to_integer(sub_cast_6(k_iter) - 1))(12 DOWNTO 0) & '0';
      sub_cast_7(k_iter) := signed(resize(idx1, 32));
      add_cast_4(k_iter) := resize(stage_out_re_0, 15);
      add_cast_5(k_iter) := resize(t_re, 15);
      add_temp_0(k_iter) := add_cast_4(k_iter) + add_cast_5(k_iter);
      stage_out_re1(to_integer(sub_cast_7(k_iter) - 1)) := add_temp_0(k_iter)(14 DOWNTO 1);
      sub_cast_10(k_iter) := signed(resize(idx1, 32));
      add_cast_13(k_iter) := resize(stage_out_im_0, 15);
      add_cast_14(k_iter) := resize(t_im, 15);
      add_temp_3(k_iter) := add_cast_13(k_iter) + add_cast_14(k_iter);
      stage_out_im1(to_integer(sub_cast_10(k_iter) - 1)) := add_temp_3(k_iter)(14 DOWNTO 1);
      sub_cast_13(k_iter) := signed(resize(idx2, 32));
      sub_cast_14(k_iter) := resize(stage_out_re_0, 15);
      sub_cast_15(k_iter) := resize(t_re, 15);
      sub_temp_2(k_iter) := sub_cast_14(k_iter) - sub_cast_15(k_iter);
      stage_out_re1(to_integer(sub_cast_13(k_iter) - 1)) := sub_temp_2(k_iter)(14 DOWNTO 1);
      sub_cast_16(k_iter) := signed(resize(idx2, 32));
      sub_cast_17(k_iter) := resize(stage_out_im_0, 15);
      sub_cast_18(k_iter) := resize(t_im, 15);
      sub_temp_3(k_iter) := sub_cast_17(k_iter) - sub_cast_18(k_iter);
      stage_out_im1(to_integer(sub_cast_16(k_iter) - 1)) := sub_temp_3(k_iter)(14 DOWNTO 1);
      W_ROM_8_not_empty1 := w_rom_8_not_empty_0;
    END LOOP;

    W_ROM_8_re_2 <= W_ROM_8_re1;
    W_ROM_8_im_2 <= W_ROM_8_im1;
    stage_out_re_1 <= stage_out_re1;
    stage_out_im_1 <= stage_out_im1;
    W_ROM_8_not_empty_2 <= W_ROM_8_not_empty1;
  END PROCESS p4_output;


  -- === Stage 2 (distance = 2) ===
  p3_output : PROCESS (FI_SIN_COS_LUT, FI_SIN_COS_LUT_1, W_ROM_8_im_2, W_ROM_8_not_empty_2,
       W_ROM_8_re_2, stage_out_im_1, stage_out_re_1)
    VARIABLE W_ROM_8_re2 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_im2 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_re2 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_im2 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_not_empty2 : std_logic;
    VARIABLE k_0 : unsigned(2 DOWNTO 0);
    VARIABLE w_rom_8_not_empty_01 : std_logic;
    VARIABLE j : unsigned(1 DOWNTO 0);
    VARIABLE idx11 : unsigned(2 DOWNTO 0);
    VARIABLE idx21 : unsigned(3 DOWNTO 0);
    VARIABLE fullScaleIndex1 : unsigned(15 DOWNTO 0);
    VARIABLE idxLUTLoZero1 : unsigned(7 DOWNTO 0);
    VARIABLE fullscaleindex_01 : unsigned(15 DOWNTO 0);
    VARIABLE idxlutlozero_01 : unsigned(7 DOWNTO 0);
    VARIABLE w_rom_8_not_empty_11 : std_logic;
    VARIABLE t_re1 : signed(13 DOWNTO 0);
    VARIABLE t_im1 : signed(13 DOWNTO 0);
    VARIABLE stage_out_re_01 : signed(13 DOWNTO 0);
    VARIABLE stage_out_im_01 : signed(13 DOWNTO 0);
    VARIABLE cast1 : vector_of_signed64(0 TO 1);
    VARIABLE cast_01 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast1 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp1 : vector_of_signed28(0 TO 1);
    VARIABLE sub_cast_01 : vector_of_signed29(0 TO 1);
    VARIABLE sub_cast_19 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_01 : vector_of_signed28(0 TO 1);
    VARIABLE sub_cast_21 : vector_of_signed29(0 TO 1);
    VARIABLE sub_temp1 : vector_of_signed29(0 TO 1);
    VARIABLE mul_temp_11 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast_11 : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_31 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_21 : vector_of_signed28(0 TO 1);
    VARIABLE add_cast1 : vector_of_signed29(0 TO 1);
    VARIABLE sub_cast_41 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_31 : vector_of_signed28(0 TO 1);
    VARIABLE add_cast_01 : vector_of_signed29(0 TO 1);
    VARIABLE add_temp1 : vector_of_signed29(0 TO 1);
    VARIABLE sub_cast_51 : vector_of_signed32(0 TO 1);
    VARIABLE mul_temp_41 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast_21 : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_61 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_71 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_110 : vector_of_signed15(0 TO 1);
    VARIABLE add_cast_22 : vector_of_signed15(0 TO 1);
    VARIABLE add_temp_01 : vector_of_signed15(0 TO 1);
    VARIABLE add_cast_31 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_41 : vector_of_signed32(0 TO 7);
    VARIABLE cast_31 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_11 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_51 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_81 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_61 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_91 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_01 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_51 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_71 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_81 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_91 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_21 : vector_of_signed32(0 TO 7);
    VARIABLE cast_41 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_101 : vector_of_signed32(0 TO 1);
    VARIABLE add_cast_101 : vector_of_signed15(0 TO 1);
    VARIABLE add_cast_111 : vector_of_signed15(0 TO 1);
    VARIABLE add_temp_31 : vector_of_signed15(0 TO 1);
    VARIABLE add_cast_121 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_131 : vector_of_signed32(0 TO 7);
    VARIABLE cast_5 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_41 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_141 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_111 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_151 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_121 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_11 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_61 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_161 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_171 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_181 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_51 : vector_of_signed32(0 TO 7);
    VARIABLE cast_6 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_131 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_141 : vector_of_signed15(0 TO 1);
    VARIABLE sub_cast_151 : vector_of_signed15(0 TO 1);
    VARIABLE sub_temp_21 : vector_of_signed15(0 TO 1);
    VARIABLE sub_cast_161 : vector_of_signed32(0 TO 1);
    VARIABLE sub_cast_171 : vector_of_signed15(0 TO 1);
    VARIABLE sub_cast_181 : vector_of_signed15(0 TO 1);
    VARIABLE sub_temp_31 : vector_of_signed15(0 TO 1);
  BEGIN
    idx11 := to_unsigned(16#0#, 3);
    idx21 := to_unsigned(16#0#, 4);
    idxLUTLoZero1 := to_unsigned(16#00#, 8);
    idxlutlozero_01 := to_unsigned(16#00#, 8);
    w_rom_8_not_empty_01 := '0';
    w_rom_8_not_empty_11 := '0';
    k_0 := to_unsigned(16#0#, 3);
    j := to_unsigned(16#0#, 2);
    fullScaleIndex1 := to_unsigned(16#0000#, 16);
    fullscaleindex_01 := to_unsigned(16#0000#, 16);
    t_re1 := to_signed(16#0000#, 14);
    t_im1 := to_signed(16#0000#, 14);
    stage_out_re_01 := to_signed(16#0000#, 14);
    stage_out_im_01 := to_signed(16#0000#, 14);
    W_ROM_8_re2 := W_ROM_8_re_2;
    W_ROM_8_im2 := W_ROM_8_im_2;
    stage_out_re2 := stage_out_re_1;
    stage_out_im2 := stage_out_im_1;
    W_ROM_8_not_empty2 := W_ROM_8_not_empty_2;

    FOR k_iter1 IN 0 TO 1 LOOP
      cast1(k_iter1) := resize(to_signed(k_iter1, 32) & '0' & '0', 64);
      cast_01(k_iter1) := cast1(k_iter1)(31 DOWNTO 0);
      k_0 := unsigned(cast_01(k_iter1)(2 DOWNTO 0));
      w_rom_8_not_empty_01 := W_ROM_8_not_empty2;

      FOR j_iter IN 0 TO 1 LOOP
        j := unsigned(to_signed(j_iter, 32)(1 DOWNTO 0));
        idx11 := resize(resize(resize(k_0, 4) + resize(j, 4), 5) + to_unsigned(16#01#, 5), 3);
        idx21 := resize(idx11, 4) + to_unsigned(16#2#, 4);
        IF ( NOT w_rom_8_not_empty_01) = '1' THEN 

          FOR k1 IN 0 TO 7 LOOP
            mul_temp_11(k1) := unsigned'(X"A2F96524") * nc_8(k1);
            cast_11(k1) := mul_temp_11(k1)(46 DOWNTO 15);
            fullScaleIndex1 := cast_11(k1)(31 DOWNTO 16);
            idxLUTLoZero1 := fullScaleIndex1(15 DOWNTO 8);
            mul_temp_41(k1) := unsigned'(X"A2F96524") * nc_8(k1);
            cast_21(k1) := mul_temp_41(k1)(46 DOWNTO 15);
            fullscaleindex_01 := cast_21(k1)(31 DOWNTO 16);
            idxlutlozero_01 := fullscaleindex_01(15 DOWNTO 8);
            add_cast_31(k1) := signed(resize(idxLUTLoZero1, 16));
            add_cast_41(k1) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_31(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            cast_31(k1) := signed(resize(fullScaleIndex1(7 DOWNTO 0), 9));
            add_temp_11(k1) := idxLUTLoZero1 + to_unsigned(16#01#, 8);
            add_cast_51(k1) := signed(resize(add_temp_11(k1), 16));
            sub_cast_81(k1) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_51(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            add_cast_61(k1) := signed(resize(idxLUTLoZero1, 16));
            sub_cast_91(k1) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_61(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            sub_temp_01(k1) := sub_cast_81(k1) - sub_cast_91(k1);
            mul_temp_51(k1) := cast_31(k1) * sub_temp_01(k1);
            add_cast_71(k1) := mul_temp_51(k1)(39 DOWNTO 8);
            add_cast_81(k1) := add_cast_71(k1)(30 DOWNTO 15);
            add_cast_91(k1) := resize(add_cast_81(k1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            add_temp_21(k1) := add_cast_41(k1) + add_cast_91(k1);
            cast_41(k1) := add_temp_21(k1)(30 DOWNTO 15);
            W_ROM_8_re2(k1) := resize(cast_41(k1)(15 DOWNTO 3), 14);
            add_cast_121(k1) := signed(resize(idxlutlozero_01, 16));
            add_cast_131(k1) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_121(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            cast_5(k1) := signed(resize(fullscaleindex_01(7 DOWNTO 0), 9));
            add_temp_41(k1) := idxlutlozero_01 + to_unsigned(16#01#, 8);
            add_cast_141(k1) := signed(resize(add_temp_41(k1), 16));
            sub_cast_111(k1) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_141(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            add_cast_151(k1) := signed(resize(idxlutlozero_01, 16));
            sub_cast_121(k1) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_151(k1) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            sub_temp_11(k1) := sub_cast_111(k1) - sub_cast_121(k1);
            mul_temp_61(k1) := cast_5(k1) * sub_temp_11(k1);
            add_cast_161(k1) := mul_temp_61(k1)(39 DOWNTO 8);
            add_cast_171(k1) := add_cast_161(k1)(30 DOWNTO 15);
            add_cast_181(k1) := resize(add_cast_171(k1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
            add_temp_51(k1) := add_cast_131(k1) + add_cast_181(k1);
            cast_6(k1) := add_temp_51(k1)(30 DOWNTO 15);
            W_ROM_8_im2(k1) := resize(cast_6(k1)(15 DOWNTO 3), 14);
          END LOOP;

          w_rom_8_not_empty_11 := '1';
        ELSE 
          w_rom_8_not_empty_11 := w_rom_8_not_empty_01;
        END IF;
        sub_cast1(j_iter) := signed(resize(idx21, 32));
        mul_temp1(j_iter) := stage_out_re2(to_integer(sub_cast1(j_iter) - 1)) * W_ROM_8_re2(to_integer(j));
        sub_cast_01(j_iter) := resize(mul_temp1(j_iter), 29);
        sub_cast_19(j_iter) := signed(resize(idx21, 32));
        mul_temp_01(j_iter) := stage_out_im2(to_integer(sub_cast_19(j_iter) - 1)) * W_ROM_8_im2(to_integer(j));
        sub_cast_21(j_iter) := resize(mul_temp_01(j_iter), 29);
        sub_temp1(j_iter) := sub_cast_01(j_iter) - sub_cast_21(j_iter);
        t_re1 := sub_temp1(j_iter)(24 DOWNTO 11);
        sub_cast_31(j_iter) := signed(resize(idx21, 32));
        mul_temp_21(j_iter) := stage_out_re2(to_integer(sub_cast_31(j_iter) - 1)) * W_ROM_8_im2(to_integer(j));
        add_cast1(j_iter) := resize(mul_temp_21(j_iter), 29);
        sub_cast_41(j_iter) := signed(resize(idx21, 32));
        mul_temp_31(j_iter) := stage_out_im2(to_integer(sub_cast_41(j_iter) - 1)) * W_ROM_8_re2(to_integer(j));
        add_cast_01(j_iter) := resize(mul_temp_31(j_iter), 29);
        add_temp1(j_iter) := add_cast1(j_iter) + add_cast_01(j_iter);
        t_im1 := add_temp1(j_iter)(24 DOWNTO 11);
        sub_cast_51(j_iter) := signed(resize(idx11, 32));
        stage_out_re_01 := stage_out_re2(to_integer(sub_cast_51(j_iter) - 1))(12 DOWNTO 0) & '0';
        sub_cast_61(j_iter) := signed(resize(idx11, 32));
        stage_out_im_01 := stage_out_im2(to_integer(sub_cast_61(j_iter) - 1))(12 DOWNTO 0) & '0';
        sub_cast_71(j_iter) := signed(resize(idx11, 32));
        add_cast_110(j_iter) := resize(stage_out_re_01, 15);
        add_cast_22(j_iter) := resize(t_re1, 15);
        add_temp_01(j_iter) := add_cast_110(j_iter) + add_cast_22(j_iter);
        stage_out_re2(to_integer(sub_cast_71(j_iter) - 1)) := add_temp_01(j_iter)(14 DOWNTO 1);
        sub_cast_101(j_iter) := signed(resize(idx11, 32));
        add_cast_101(j_iter) := resize(stage_out_im_01, 15);
        add_cast_111(j_iter) := resize(t_im1, 15);
        add_temp_31(j_iter) := add_cast_101(j_iter) + add_cast_111(j_iter);
        stage_out_im2(to_integer(sub_cast_101(j_iter) - 1)) := add_temp_31(j_iter)(14 DOWNTO 1);
        sub_cast_131(j_iter) := signed(resize(idx21, 32));
        sub_cast_141(j_iter) := resize(stage_out_re_01, 15);
        sub_cast_151(j_iter) := resize(t_re1, 15);
        sub_temp_21(j_iter) := sub_cast_141(j_iter) - sub_cast_151(j_iter);
        stage_out_re2(to_integer(sub_cast_131(j_iter) - 1)) := sub_temp_21(j_iter)(14 DOWNTO 1);
        sub_cast_161(j_iter) := signed(resize(idx21, 32));
        sub_cast_171(j_iter) := resize(stage_out_im_01, 15);
        sub_cast_181(j_iter) := resize(t_im1, 15);
        sub_temp_31(j_iter) := sub_cast_171(j_iter) - sub_cast_181(j_iter);
        stage_out_im2(to_integer(sub_cast_161(j_iter) - 1)) := sub_temp_31(j_iter)(14 DOWNTO 1);
        w_rom_8_not_empty_01 := w_rom_8_not_empty_11;
      END LOOP;

      W_ROM_8_not_empty2 := w_rom_8_not_empty_01;
    END LOOP;

    W_ROM_8_re_3 <= W_ROM_8_re2;
    W_ROM_8_im_3 <= W_ROM_8_im2;
    stage_out_re_2 <= stage_out_re2;
    stage_out_im_2 <= stage_out_im2;
    W_ROM_8_not_empty_3 <= W_ROM_8_not_empty2;
  END PROCESS p3_output;


  -- === Stage 3 (distance = 4) ===
  p2_output : PROCESS (FI_SIN_COS_LUT, FI_SIN_COS_LUT_1, W_ROM_8_im_3, W_ROM_8_not_empty_3,
       W_ROM_8_re_3, stage_out_im_2, stage_out_re_2)
    VARIABLE W_ROM_8_re3 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_im3 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_re3 : vector_of_signed14(0 TO 7);
    VARIABLE stage_out_im3 : vector_of_signed14(0 TO 7);
    VARIABLE W_ROM_8_not_empty3 : std_logic;
    VARIABLE j1 : unsigned(1 DOWNTO 0);
    VARIABLE idx12 : unsigned(2 DOWNTO 0);
    VARIABLE idx22 : unsigned(3 DOWNTO 0);
    VARIABLE fullScaleIndex2 : unsigned(15 DOWNTO 0);
    VARIABLE idxLUTLoZero2 : unsigned(7 DOWNTO 0);
    VARIABLE fullscaleindex_02 : unsigned(15 DOWNTO 0);
    VARIABLE idxlutlozero_02 : unsigned(7 DOWNTO 0);
    VARIABLE w_rom_8_not_empty_02 : std_logic;
    VARIABLE t_re2 : signed(13 DOWNTO 0);
    VARIABLE t_im2 : signed(13 DOWNTO 0);
    VARIABLE stage_out_re_02 : signed(13 DOWNTO 0);
    VARIABLE stage_out_im_02 : signed(13 DOWNTO 0);
    VARIABLE sub_cast2 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp2 : vector_of_signed28(0 TO 3);
    VARIABLE sub_cast_02 : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_110 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_02 : vector_of_signed28(0 TO 3);
    VARIABLE sub_cast_22 : vector_of_signed29(0 TO 3);
    VARIABLE sub_temp2 : vector_of_signed29(0 TO 3);
    VARIABLE mul_temp_12 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast2 : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_32 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_22 : vector_of_signed28(0 TO 3);
    VARIABLE add_cast2 : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_42 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_32 : vector_of_signed28(0 TO 3);
    VARIABLE add_cast_02 : vector_of_signed29(0 TO 3);
    VARIABLE add_temp2 : vector_of_signed29(0 TO 3);
    VARIABLE sub_cast_52 : vector_of_signed32(0 TO 3);
    VARIABLE mul_temp_42 : vector_of_unsigned48(0 TO 7);
    VARIABLE cast_02 : vector_of_unsigned32(0 TO 7);
    VARIABLE sub_cast_62 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_72 : vector_of_signed32(0 TO 3);
    VARIABLE add_cast_112 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_23 : vector_of_signed15(0 TO 3);
    VARIABLE add_temp_02 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_32 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_42 : vector_of_signed32(0 TO 7);
    VARIABLE cast_12 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_12 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_52 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_82 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_62 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_92 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_02 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_52 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_72 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_82 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_92 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_22 : vector_of_signed32(0 TO 7);
    VARIABLE cast_22 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_102 : vector_of_signed32(0 TO 3);
    VARIABLE add_cast_102 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_113 : vector_of_signed15(0 TO 3);
    VARIABLE add_temp_32 : vector_of_signed15(0 TO 3);
    VARIABLE add_cast_122 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_132 : vector_of_signed32(0 TO 7);
    VARIABLE cast_32 : vector_of_signed9(0 TO 7);
    VARIABLE add_temp_42 : vector_of_unsigned8(0 TO 7);
    VARIABLE add_cast_142 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_112 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_152 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_122 : vector_of_signed32(0 TO 7);
    VARIABLE sub_temp_12 : vector_of_signed32(0 TO 7);
    VARIABLE mul_temp_62 : vector_of_signed41(0 TO 7);
    VARIABLE add_cast_162 : vector_of_signed32(0 TO 7);
    VARIABLE add_cast_172 : vector_of_signed16(0 TO 7);
    VARIABLE add_cast_182 : vector_of_signed32(0 TO 7);
    VARIABLE add_temp_52 : vector_of_signed32(0 TO 7);
    VARIABLE cast_42 : vector_of_signed16(0 TO 7);
    VARIABLE sub_cast_132 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_142 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_152 : vector_of_signed15(0 TO 3);
    VARIABLE sub_temp_22 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_162 : vector_of_signed32(0 TO 3);
    VARIABLE sub_cast_172 : vector_of_signed15(0 TO 3);
    VARIABLE sub_cast_182 : vector_of_signed15(0 TO 3);
    VARIABLE sub_temp_32 : vector_of_signed15(0 TO 3);
  BEGIN
    idx12 := to_unsigned(16#0#, 3);
    idx22 := to_unsigned(16#0#, 4);
    idxLUTLoZero2 := to_unsigned(16#00#, 8);
    idxlutlozero_02 := to_unsigned(16#00#, 8);
    w_rom_8_not_empty_02 := '0';
    j1 := to_unsigned(16#0#, 2);
    fullScaleIndex2 := to_unsigned(16#0000#, 16);
    fullscaleindex_02 := to_unsigned(16#0000#, 16);
    t_re2 := to_signed(16#0000#, 14);
    t_im2 := to_signed(16#0000#, 14);
    stage_out_re_02 := to_signed(16#0000#, 14);
    stage_out_im_02 := to_signed(16#0000#, 14);
    W_ROM_8_re3 := W_ROM_8_re_3;
    W_ROM_8_im3 := W_ROM_8_im_3;
    stage_out_re3 := stage_out_re_2;
    stage_out_im3 := stage_out_im_2;
    W_ROM_8_not_empty3 := W_ROM_8_not_empty_3;

    FOR j_iter1 IN 0 TO 3 LOOP
      j1 := unsigned(to_signed(j_iter1, 32)(1 DOWNTO 0));
      idx12 := resize(j1, 3) + to_unsigned(16#1#, 3);
      idx22 := resize(idx12, 4) + to_unsigned(16#4#, 4);
      IF ( NOT W_ROM_8_not_empty3) = '1' THEN 

        FOR k2 IN 0 TO 7 LOOP
          mul_temp_12(k2) := unsigned'(X"A2F96524") * nc_10(k2);
          cast2(k2) := mul_temp_12(k2)(46 DOWNTO 15);
          fullScaleIndex2 := cast2(k2)(31 DOWNTO 16);
          idxLUTLoZero2 := fullScaleIndex2(15 DOWNTO 8);
          mul_temp_42(k2) := unsigned'(X"A2F96524") * nc_10(k2);
          cast_02(k2) := mul_temp_42(k2)(46 DOWNTO 15);
          fullscaleindex_02 := cast_02(k2)(31 DOWNTO 16);
          idxlutlozero_02 := fullscaleindex_02(15 DOWNTO 8);
          add_cast_32(k2) := signed(resize(idxLUTLoZero2, 16));
          add_cast_42(k2) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_32(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          cast_12(k2) := signed(resize(fullScaleIndex2(7 DOWNTO 0), 9));
          add_temp_12(k2) := idxLUTLoZero2 + to_unsigned(16#01#, 8);
          add_cast_52(k2) := signed(resize(add_temp_12(k2), 16));
          sub_cast_82(k2) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_52(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_cast_62(k2) := signed(resize(idxLUTLoZero2, 16));
          sub_cast_92(k2) := resize(FI_SIN_COS_LUT(to_integer(resize(add_cast_62(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          sub_temp_02(k2) := sub_cast_82(k2) - sub_cast_92(k2);
          mul_temp_52(k2) := cast_12(k2) * sub_temp_02(k2);
          add_cast_72(k2) := mul_temp_52(k2)(39 DOWNTO 8);
          add_cast_82(k2) := add_cast_72(k2)(30 DOWNTO 15);
          add_cast_92(k2) := resize(add_cast_82(k2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_temp_22(k2) := add_cast_42(k2) + add_cast_92(k2);
          cast_22(k2) := add_temp_22(k2)(30 DOWNTO 15);
          W_ROM_8_re3(k2) := resize(cast_22(k2)(15 DOWNTO 3), 14);
          add_cast_122(k2) := signed(resize(idxlutlozero_02, 16));
          add_cast_132(k2) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_122(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          cast_32(k2) := signed(resize(fullscaleindex_02(7 DOWNTO 0), 9));
          add_temp_42(k2) := idxlutlozero_02 + to_unsigned(16#01#, 8);
          add_cast_142(k2) := signed(resize(add_temp_42(k2), 16));
          sub_cast_112(k2) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_142(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_cast_152(k2) := signed(resize(idxlutlozero_02, 16));
          sub_cast_122(k2) := resize(FI_SIN_COS_LUT_1(to_integer(resize(add_cast_152(k2) + to_signed(16#0001#, 16), 32) - 1)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          sub_temp_12(k2) := sub_cast_112(k2) - sub_cast_122(k2);
          mul_temp_62(k2) := cast_32(k2) * sub_temp_12(k2);
          add_cast_162(k2) := mul_temp_62(k2)(39 DOWNTO 8);
          add_cast_172(k2) := add_cast_162(k2)(30 DOWNTO 15);
          add_cast_182(k2) := resize(add_cast_172(k2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 32);
          add_temp_52(k2) := add_cast_132(k2) + add_cast_182(k2);
          cast_42(k2) := add_temp_52(k2)(30 DOWNTO 15);
          W_ROM_8_im3(k2) := resize(cast_42(k2)(15 DOWNTO 3), 14);
        END LOOP;

        w_rom_8_not_empty_02 := '1';
      ELSE 
        w_rom_8_not_empty_02 := W_ROM_8_not_empty3;
      END IF;
      sub_cast2(j_iter1) := signed(resize(idx22, 32));
      mul_temp2(j_iter1) := stage_out_re3(to_integer(sub_cast2(j_iter1) - 1)) * W_ROM_8_re3(to_integer(j1));
      sub_cast_02(j_iter1) := resize(mul_temp2(j_iter1), 29);
      sub_cast_110(j_iter1) := signed(resize(idx22, 32));
      mul_temp_02(j_iter1) := stage_out_im3(to_integer(sub_cast_110(j_iter1) - 1)) * W_ROM_8_im3(to_integer(j1));
      sub_cast_22(j_iter1) := resize(mul_temp_02(j_iter1), 29);
      sub_temp2(j_iter1) := sub_cast_02(j_iter1) - sub_cast_22(j_iter1);
      t_re2 := sub_temp2(j_iter1)(24 DOWNTO 11);
      sub_cast_32(j_iter1) := signed(resize(idx22, 32));
      mul_temp_22(j_iter1) := stage_out_re3(to_integer(sub_cast_32(j_iter1) - 1)) * W_ROM_8_im3(to_integer(j1));
      add_cast2(j_iter1) := resize(mul_temp_22(j_iter1), 29);
      sub_cast_42(j_iter1) := signed(resize(idx22, 32));
      mul_temp_32(j_iter1) := stage_out_im3(to_integer(sub_cast_42(j_iter1) - 1)) * W_ROM_8_re3(to_integer(j1));
      add_cast_02(j_iter1) := resize(mul_temp_32(j_iter1), 29);
      add_temp2(j_iter1) := add_cast2(j_iter1) + add_cast_02(j_iter1);
      t_im2 := add_temp2(j_iter1)(24 DOWNTO 11);
      sub_cast_52(j_iter1) := signed(resize(idx12, 32));
      stage_out_re_02 := stage_out_re3(to_integer(sub_cast_52(j_iter1) - 1))(12 DOWNTO 0) & '0';
      sub_cast_62(j_iter1) := signed(resize(idx12, 32));
      stage_out_im_02 := stage_out_im3(to_integer(sub_cast_62(j_iter1) - 1))(12 DOWNTO 0) & '0';
      sub_cast_72(j_iter1) := signed(resize(idx12, 32));
      add_cast_112(j_iter1) := resize(stage_out_re_02, 15);
      add_cast_23(j_iter1) := resize(t_re2, 15);
      add_temp_02(j_iter1) := add_cast_112(j_iter1) + add_cast_23(j_iter1);
      stage_out_re3(to_integer(sub_cast_72(j_iter1) - 1)) := add_temp_02(j_iter1)(14 DOWNTO 1);
      sub_cast_102(j_iter1) := signed(resize(idx12, 32));
      add_cast_102(j_iter1) := resize(stage_out_im_02, 15);
      add_cast_113(j_iter1) := resize(t_im2, 15);
      add_temp_32(j_iter1) := add_cast_102(j_iter1) + add_cast_113(j_iter1);
      stage_out_im3(to_integer(sub_cast_102(j_iter1) - 1)) := add_temp_32(j_iter1)(14 DOWNTO 1);
      sub_cast_132(j_iter1) := signed(resize(idx22, 32));
      sub_cast_142(j_iter1) := resize(stage_out_re_02, 15);
      sub_cast_152(j_iter1) := resize(t_re2, 15);
      sub_temp_22(j_iter1) := sub_cast_142(j_iter1) - sub_cast_152(j_iter1);
      stage_out_re3(to_integer(sub_cast_132(j_iter1) - 1)) := sub_temp_22(j_iter1)(14 DOWNTO 1);
      sub_cast_162(j_iter1) := signed(resize(idx22, 32));
      sub_cast_172(j_iter1) := resize(stage_out_im_02, 15);
      sub_cast_182(j_iter1) := resize(t_im2, 15);
      sub_temp_32(j_iter1) := sub_cast_172(j_iter1) - sub_cast_182(j_iter1);
      stage_out_im3(to_integer(sub_cast_162(j_iter1) - 1)) := sub_temp_32(j_iter1)(14 DOWNTO 1);
      W_ROM_8_not_empty3 := w_rom_8_not_empty_02;
    END LOOP;

    W_ROM_8_re <= W_ROM_8_re3;
    W_ROM_8_im <= W_ROM_8_im3;
    stage_out_re_3 <= stage_out_re3;
    stage_out_im_3 <= stage_out_im3;
    W_ROM_8_not_empty <= W_ROM_8_not_empty3;
  END PROCESS p2_output;


  fft_out_re_tmp <= stage_out_re_3;
  fft_out_im_tmp <= stage_out_im_3;

  outputgen1: FOR k3 IN 0 TO 7 GENERATE
    fft_out_re(k3) <= std_logic_vector(fft_out_re_tmp(k3));
  END GENERATE;

  outputgen: FOR k3 IN 0 TO 7 GENERATE
    fft_out_im(k3) <= std_logic_vector(fft_out_im_tmp(k3));
  END GENERATE;

  ce_out <= clk_enable;

END rtl;


